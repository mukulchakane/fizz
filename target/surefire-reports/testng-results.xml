<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="94" started-at="2017-12-19T05:54:00Z" finished-at="2017-12-19T05:54:00Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="94" started-at="2017-12-19T05:54:00Z" finished-at="2017-12-19T05:54:00Z">
      <class name="com.steerlean.fizzbuzz.DivisibilityRuleTest">
        <test-method status="PASS" signature="testIfNumberDivisible()[pri:0, instance:com.steerlean.fizzbuzz.DivisibilityRuleTest@ff5b51f]" name="testIfNumberDivisible" duration-ms="15" started-at="2017-12-19T11:24:00Z" finished-at="2017-12-19T11:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfNumberDivisible -->
        <test-method status="PASS" signature="testIfNumberDivisibleZero()[pri:0, instance:com.steerlean.fizzbuzz.DivisibilityRuleTest@ff5b51f]" name="testIfNumberDivisibleZero" duration-ms="0" started-at="2017-12-19T11:24:00Z" finished-at="2017-12-19T11:24:00Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.steerlean.fizzbuzz.rule.DivisibilityRule.parse(DivisibilityRule.java:13)
	at com.steerlean.fizzbuzz.DivisibilityRuleTest.testIfNumberDivisibleZero(DivisibilityRuleTest.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfNumberDivisibleZero -->
        <test-method status="PASS" signature="testIfNumberIsNotDivisible()[pri:0, instance:com.steerlean.fizzbuzz.DivisibilityRuleTest@ff5b51f]" name="testIfNumberIsNotDivisible" duration-ms="0" started-at="2017-12-19T11:24:00Z" finished-at="2017-12-19T11:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfNumberIsNotDivisible -->
      </class> <!-- com.steerlean.fizzbuzz.DivisibilityRuleTest -->
      <class name="com.steerlean.fizzbuzz.RuleConfigeratorTest">
        <test-method status="PASS" signature="testRuleConfigerator(com.steerlean.fizzbuzz.rule.IRule, com.steerlean.fizzbuzz.rule.IRule, com.steerlean.fizzbuzz.rule.IRule, com.steerlean.fizzbuzz.rule.IRule)[pri:0, instance:com.steerlean.fizzbuzz.RuleConfigeratorTest@25bbe1b6]" name="testRuleConfigerator" duration-ms="47" started-at="2017-12-19T11:24:00Z" finished-at="2017-12-19T11:24:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.steerlean.fizzbuzz.rule.$Impl_IRule@86be70a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.steerlean.fizzbuzz.rule.$Impl_IRule@480bdb19]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[com.steerlean.fizzbuzz.rule.$Impl_IRule@2a556333]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[com.steerlean.fizzbuzz.rule.$Impl_IRule@7d70d1b1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRuleConfigerator -->
      </class> <!-- com.steerlean.fizzbuzz.RuleConfigeratorTest -->
      <class name="com.steerlean.fizzbuzz.RuleFactoryTest">
        <test-method status="PASS" signature="testCreateDivisibilityRule()[pri:0, instance:com.steerlean.fizzbuzz.RuleFactoryTest@6fd02e5]" name="testCreateDivisibilityRule" duration-ms="0" started-at="2017-12-19T11:24:00Z" finished-at="2017-12-19T11:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDivisibilityRule -->
      </class> <!-- com.steerlean.fizzbuzz.RuleFactoryTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
